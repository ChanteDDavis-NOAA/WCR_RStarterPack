Discussion <- data.frame(read_csv("./R Workshop Discussion.csv", col_names = FALSE))
head(Discussion)
# Discussion <- data.frame(read_csv(here("R Workshop Detailed Schedule.csv"), col_names = FALSE))
names(Discussion)<-Discussion[2,]
Discussion<-Discussion[-c(1:2),]
Discussion$Notes0<-Discussion$Notes
Discussion$Notes
Discussion0 <- Discussion
#Discussion <- data.frame(read_csv("./R Workshop Detailed Schedule.csv", col_names = FALSE))
Discussion <- data.frame(read_csv("./R Workshop Discussion.csv", col_names = FALSE))
# Discussion <- data.frame(read_csv(here("R Workshop Detailed Schedule.csv"), col_names = FALSE))
names(Discussion)<-Discussion[2,]
Discussion<-Discussion[-c(1:2),]
Discussion$Notes0<-Discussion$Notes
Discussion0 <- Discussion
program<-as_tibble(Discussion) #%>%
head(discussion)
names(Discussion)
drive_download("R Workshop Discussion", type = "csv", overwrite = TRUE, path = "./R Workshop Discussion")
aa[i][[1]][ii]
#Discussion <- data.frame(read_csv("./R Workshop Detailed Schedule.csv", col_names = FALSE))
Discussion <- data.frame(read_csv("./R Workshop Discussion.csv", col_names = FALSE))
# Discussion <- data.frame(read_csv(here("R Workshop Detailed Schedule.csv"), col_names = FALSE))
names(Discussion)<-Discussion[2,]
Discussion<-Discussion[-c(1:2),]
Discussion$Authors<-""
Discussion$Notes0<-Discussion$Notes
Discussion0 <- Discussion
Discussion$Notes[is.na(Discussion$Notes)]<-""
aa<-strsplit(x = Discussion$Notes, split = "\n\n")
i<-1
ii<-2
aa[i][[1]][ii]
aa[i][[1]]
ii<-1
gsub(pattern = '"', replacement = '\"', x = aa[i][[1]][ii])
aa[i][[1]][ii]<-gsub(pattern = '"', replacement = '\"', x = aa[i][[1]][ii])
aa[i][[1]][ii]<-gsub(pattern = "'", replacement = "\'", x = aa[i][[1]][ii])
aa[i][[1]][ii]
'This string has "double quotes"'
gsub(pattern = '"', replacement = '"', x = aa[i][[1]][ii])
drive_download("R Workshop Discussion", type = "csv", overwrite = TRUE, path = "./R Workshop Discussion")
library("googledrive")
# https://googledrive.tidyverse.org/
# https://docs.google.com/spreadsheets/d/1NkG331BZW_Q9PuzdhEgW5rB6vkLe0K_Dd1K3iFrAFNw/edit?usp=sharing
drive_deauth()
drive_auth()
drive_download("R Workshop Video Links", type = "csv", overwrite = TRUE, path = "./R Workshop Video Links")
drive_download("R Workshop Detailed Schedule", type = "csv", overwrite = TRUE, path = "./R Workshop Detailed Schedule")
getwd()
Agenda
drive_download("R Workshop Detailed Schedule", type = "csv", overwrite = TRUE, path = "./R Workshop Detailed Schedule")
drive_download("R Workshop Detailed Schedule", type = "csv", overwrite = TRUE, path = "./R Workshop Detailed Schedule")
library("googledrive")
# https://googledrive.tidyverse.org/
# https://docs.google.com/spreadsheets/d/1NkG331BZW_Q9PuzdhEgW5rB6vkLe0K_Dd1K3iFrAFNw/edit?usp=sharing
drive_deauth()
drive_auth()
drive_download("R Workshop Detailed Schedule", type = "csv", overwrite = TRUE, path = "./R Workshop Detailed Schedule")
drive_download("R Workshop Detailed Schedule", type = "csv", overwrite = TRUE, path = "./R Workshop Detailed Schedule")
library("googledrive")
# https://googledrive.tidyverse.org/
# https://docs.google.com/spreadsheets/d/1NkG331BZW_Q9PuzdhEgW5rB6vkLe0K_Dd1K3iFrAFNw/edit?usp=sharing
drive_deauth()
drive_auth()
drive_download("R Workshop Detailed Schedule", type = "csv", overwrite = TRUE, path = "./R Workshop Detailed Schedule")
#Agenda <- data.frame(read_csv("./R Workshop Detailed Schedule.csv", col_names = FALSE))
Agenda <- data.frame(read_csv("./R Workshop Detailed Schedule.csv", col_names = FALSE))
# Agenda <- data.frame(read_csv(here("R Workshop Detailed Schedule.csv"), col_names = FALSE))
names(Agenda)<-Agenda[2,]
Agenda<-Agenda[-c(1:2),]
Agenda$Notes0<-Agenda$Notes
Agenda0 <- Agenda
not0<-c("", "??", NA)
Agenda$Date<-paste0(
Agenda$`Start Time (PT)`, "-", Agenda$`End Time (PT)`
)
Agenda$Title<-paste0(Agenda$`Course Segment`,
ifelse( ( Agenda$`Course Segment` == Agenda$Topics |
Agenda$`Course Segment` %in% not0 |
Agenda$Topics %in% not0 ), "", " - "),
ifelse( ( Agenda$`Course Segment` == Agenda$Topics |
Agenda$Topics %in% not0 ), "", Agenda$Topics) )
Agenda$Authors<-paste0(ifelse(Agenda$Presenter %in% not0, "", paste0("Presenter: ", Agenda$Presenter)), #Presenter
ifelse((Agenda$`Chat/Q&A` %in% not0), "", "; "), # ;
ifelse((Agenda$Presenter %in% not0), "", " "), # Space
ifelse(Agenda$Host %in% not0, "", paste0("Host: ", Agenda$Host)), # Host
ifelse((Agenda$`Chat/Q&A` %in% not0), "", "; "), # ;
ifelse(Agenda$`Chat/Q&A` %in% not0, "", paste0("Help: ", Agenda$`Chat/Q&A`)) ) # Help
Agenda$Notes[is.na(Agenda$Notes)]<-""
aa<-strsplit(x = Agenda$Notes, split = "\n\n")
for (i in 1:length(aa)){
if (length(aa[i][[1]])!=0) {
for (ii in 1:length(aa[i][[1]])) {
# dd<- aa[i][[1]][ii]
if (grepl(pattern = "https://", x = aa[i][[1]][ii], ignore.case = T)) {
bb<-strsplit(x = aa[i][[1]][ii], split = ": ")
if (grepl(pattern = ".html", x = aa[i][[1]][ii], ignore.case = T)) {
htmlname<-strsplit(split = "/", x = bb[[1]][2])[[1]]
download.file(url = bb[[1]][2],
destfile = paste0(getwd(), "/les_", htmlname[length(htmlname)]))
bb[[1]][2]<-paste0("les_", htmlname[length(htmlname)])
}
# cc<-paste0('["', bb[[1]][1], '"] (', bb[[1]][2], '")')
# cc<-paste0('<a href="', bb[[1]][2], '">', bb[[1]][1], '</a>')
cc<-paste0('
tags$p(""),
tags$a(href="', bb[[1]][2], '", "', bb[[1]][1], '")')
# cc<-paste0("![{",bb[[1]][2],"}]({",bb[[1]][1],"})")
# aa[i][[1]][ii]<-paste0("<li>", cc, "</li>")
aa[i][[1]][ii]<-cc#paste0('tags$li(', cc, ')')
} else {
cc<-paste0('tags$p("', aa[i][[1]][ii], '")')
# cc<-paste0('<p>', ifelse(is.na(aa[i][[1]][ii]), "", aa[i][[1]][ii]), '</p>')
# aa[i][[1]][ii]<-paste0("<li>", cc, "</li>")
aa[i][[1]][ii]<-cc#paste0('tags$li(', cc, ')')
}
}
# aa[i][[1]]<-paste0("tags$div(",
#                    paste(aa[i][[1]], collapse = " "),
#                    ")")
aa[i][[1]]<-paste0('tags$li(', paste(aa[i][[1]], collapse = ", "), ')')
# aa[i][[1]]<-paste(aa[i][[1]], collapse = ", ")
} else {
aa[i][[1]]<-""
}
# aa[i][[1]]<-paste0("")
}
Agenda$Notes<-unlist(aa)
Agenda<-Agenda[,c("Date","Notes","Title","Authors")]
program<-as_tibble(Agenda) #%>%
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, error = FALSE, message = FALSE)
library(tidyverse)
library(lubridate)
library(htmltools)
library(here)
Agenda <- data.frame(read_csv("./R Workshop Detailed Schedule.csv", col_names = FALSE))
# Agenda <- data.frame(read_csv(here("R Workshop Detailed Schedule.csv"), col_names = FALSE))
names(Agenda)<-Agenda[2,]
Agenda<-Agenda[-c(1:2),]
Agenda$Notes0<-Agenda$Notes
Agenda0 <- Agenda
not0<-c("", "??", NA)
Agenda$Notes
Agenda$Date<-paste0(
Agenda$`Start Time (PT)`, "-", Agenda$`End Time (PT)`
)
Agenda$Title<-paste0(Agenda$`Course Segment`,
ifelse( ( Agenda$`Course Segment` == Agenda$Topics |
Agenda$`Course Segment` %in% not0 |
Agenda$Topics %in% not0 ), "", " - "),
ifelse( ( Agenda$`Course Segment` == Agenda$Topics |
Agenda$Topics %in% not0 ), "", Agenda$Topics) )
Agenda$Authors<-paste0(ifelse(Agenda$Presenter %in% not0, "", paste0("Presenter: ", Agenda$Presenter)), #Presenter
ifelse((Agenda$`Chat/Q&A` %in% not0), "", "; "), # ;
ifelse((Agenda$Presenter %in% not0), "", " "), # Space
ifelse(Agenda$Host %in% not0, "", paste0("Host: ", Agenda$Host)), # Host
ifelse((Agenda$`Chat/Q&A` %in% not0), "", "; "), # ;
ifelse(Agenda$`Chat/Q&A` %in% not0, "", paste0("Help: ", Agenda$`Chat/Q&A`)) ) # Help
Agenda$Notes[is.na(Agenda$Notes)]<-""
Agenda$Notes
#Agenda <- data.frame(read_csv("./R Workshop Detailed Schedule.csv", col_names = FALSE))
Agenda <- data.frame(read_csv("./R Workshop Detailed Schedule.csv", col_names = FALSE))
# Agenda <- data.frame(read_csv(here("R Workshop Detailed Schedule.csv"), col_names = FALSE))
names(Agenda)<-Agenda[2,]
Agenda<-Agenda[-c(1:2),]
Agenda$Notes0<-Agenda$Notes
Agenda0 <- Agenda
View(Agenda)
Agenda$Notes
drive_download("R Workshop Detailed Schedule", type = "csv", overwrite = TRUE, path = "./R Workshop Detailed Schedule")
#Agenda <- data.frame(read_csv("./R Workshop Detailed Schedule.csv", col_names = FALSE))
Agenda <- data.frame(read_csv("./R Workshop Detailed Schedule.csv", col_names = FALSE))
# Agenda <- data.frame(read_csv(here("R Workshop Detailed Schedule.csv"), col_names = FALSE))
names(Agenda)<-Agenda[2,]
Agenda<-Agenda[-c(1:2),]
Agenda$Notes0<-Agenda$Notes
Agenda0 <- Agenda
not0<-c("", "??", NA)
Agenda$Date<-paste0(
Agenda$`Start Time (PT)`, "-", Agenda$`End Time (PT)`
)
Agenda$Title<-paste0(Agenda$`Course Segment`,
ifelse( ( Agenda$`Course Segment` == Agenda$Topics |
Agenda$`Course Segment` %in% not0 |
Agenda$Topics %in% not0 ), "", " - "),
ifelse( ( Agenda$`Course Segment` == Agenda$Topics |
Agenda$Topics %in% not0 ), "", Agenda$Topics) )
Agenda$Authors<-paste0(ifelse(Agenda$Presenter %in% not0, "", paste0("Presenter: ", Agenda$Presenter)), #Presenter
ifelse((Agenda$`Chat/Q&A` %in% not0), "", "; "), # ;
ifelse((Agenda$Presenter %in% not0), "", " "), # Space
ifelse(Agenda$Host %in% not0, "", paste0("Host: ", Agenda$Host)), # Host
ifelse((Agenda$`Chat/Q&A` %in% not0), "", "; "), # ;
ifelse(Agenda$`Chat/Q&A` %in% not0, "", paste0("Help: ", Agenda$`Chat/Q&A`)) ) # Help
Agenda$Notes[is.na(Agenda$Notes)]<-""
aa<-strsplit(x = Agenda$Notes, split = "\n\n")
i<-15
ii<-2
(grepl(pattern = "https://", x = aa[i][[1]][ii], ignore.case = T))
bb<-strsplit(x = aa[i][[1]][ii], split = ": ")
bb
drive_download("R Workshop Detailed Schedule", type = "csv", overwrite = TRUE, path = "./R Workshop Detailed Schedule")
#Agenda <- data.frame(read_csv("./R Workshop Detailed Schedule.csv", col_names = FALSE))
Agenda <- data.frame(read_csv("./R Workshop Detailed Schedule.csv", col_names = FALSE))
# Agenda <- data.frame(read_csv(here("R Workshop Detailed Schedule.csv"), col_names = FALSE))
names(Agenda)<-Agenda[2,]
Agenda<-Agenda[-c(1:2),]
Agenda$Notes0<-Agenda$Notes
Agenda0 <- Agenda
not0<-c("", "??", NA)
Agenda$Date<-paste0(
Agenda$`Start Time (PT)`, "-", Agenda$`End Time (PT)`
)
Agenda$Title<-paste0(Agenda$`Course Segment`,
ifelse( ( Agenda$`Course Segment` == Agenda$Topics |
Agenda$`Course Segment` %in% not0 |
Agenda$Topics %in% not0 ), "", " - "),
ifelse( ( Agenda$`Course Segment` == Agenda$Topics |
Agenda$Topics %in% not0 ), "", Agenda$Topics) )
Agenda$Authors<-paste0(ifelse(Agenda$Presenter %in% not0, "", paste0("Presenter: ", Agenda$Presenter)), #Presenter
ifelse((Agenda$`Chat/Q&A` %in% not0), "", "; "), # ;
ifelse((Agenda$Presenter %in% not0), "", " "), # Space
ifelse(Agenda$Host %in% not0, "", paste0("Host: ", Agenda$Host)), # Host
ifelse((Agenda$`Chat/Q&A` %in% not0), "", "; "), # ;
ifelse(Agenda$`Chat/Q&A` %in% not0, "", paste0("Help: ", Agenda$`Chat/Q&A`)) ) # Help
Agenda$Notes[is.na(Agenda$Notes)]<-""
aa<-strsplit(x = Agenda$Notes, split = "\n\n")
bb<-strsplit(x = aa[i][[1]][ii], split = ": ")
bb
(grepl(pattern = ".html", x = aa[i][[1]][ii], ignore.case = T))
htmlname<-strsplit(split = "/", x = bb[[1]][2])[[1]]
htmlname
htmlname<-strsplit(split = "/", x = bb[[1]][2])[[1]]
htmlname
bb[[1]][2]
paste0(getwd(), "/les_", htmlname[length(htmlname)])
download.file(url = bb[[1]][2],
destfile = paste0(getwd(), "/les_", htmlname[length(htmlname)]))
library("googledrive")
# https://googledrive.tidyverse.org/
# https://docs.google.com/spreadsheets/d/1NkG331BZW_Q9PuzdhEgW5rB6vkLe0K_Dd1K3iFrAFNw/edit?usp=sharing
drive_deauth()
drive_auth()
drive_download("R Workshop Video Links", type = "csv", overwrite = TRUE, path = "./R Workshop Video Links")
drive_download("R Workshop Detailed Schedule", type = "csv", overwrite = TRUE, path = "./R Workshop Detailed Schedule")
drive_download("R Workshop Discussion", type = "csv", overwrite = TRUE, path = "./R Workshop Discussion")
drive_download("R Workshop Discussion", type = "csv", overwrite = TRUE, path = "./R Workshop Discussion")
drive_auth()
drive_download("R Workshop Discussion", type = "csv", overwrite = TRUE, path = "./R Workshop Discussion")
drive_download("R Workshop Discussion", type = "csv", overwrite = TRUE, path = "./R Workshop Discussion")
library("googledrive")
# https://googledrive.tidyverse.org/
# https://docs.google.com/spreadsheets/d/1NkG331BZW_Q9PuzdhEgW5rB6vkLe0K_Dd1K3iFrAFNw/edit?usp=sharing
drive_deauth()
drive_auth()
drive_download("R Workshop Discussion", type = "csv", overwrite = TRUE, path = "./R Workshop Discussion")
drive_download("R Workshop Discussion", type = "csv", overwrite = TRUE, path = "./R Workshop Discussion")
drive_download("R Workshop Discussion", type = "csv", overwrite = TRUE, path = "./R Workshop Discussion")
program
View([good question])
#Discussion <- data.frame(read_csv("./R Workshop Detailed Schedule.csv", col_names = FALSE))
Discussion <- data.frame(read_csv("./R Workshop Discussion.csv", col_names = FALSE))
# Discussion <- data.frame(read_csv(here("R Workshop Detailed Schedule.csv"), col_names = FALSE))
names(Discussion)<-Discussion[2,]
Discussion<-Discussion[-c(1:2),]
Discussion$Authors<-""
Discussion$Notes0<-Discussion$Notes
Discussion0 <- Discussion
Discussion$Notes[is.na(Discussion$Notes)]<-""
aa<-strsplit(x = Discussion$Notes, split = "\n\n")
for (i in 1:length(aa)){
if (length(aa[i][[1]])!=0) {
for (ii in 1:length(aa[i][[1]])) {
# if (grepl(pattern = "https://", x = aa[i][[1]][ii], ignore.case = T)) {
#   bb<-strsplit(x = aa[i][[1]][ii], split = ": ")
# if (grepl(pattern = ".html", x = aa[i][[1]][ii], ignore.case = T)) {
#   htmlname<-strsplit(split = "/", x = bb[[1]][2])[[1]]
#   download.file(url = bb[[1]][2],
#                 destfile = paste0(getwd(), "/les_", htmlname[length(htmlname)]))
#   bb[[1]][2]<-paste0("les_", htmlname[length(htmlname)])
# }
#   # cc<-paste0('["', bb[[1]][1], '"] (', bb[[1]][2], '")')
#   # cc<-paste0('<a href="', bb[[1]][2], '">', bb[[1]][1], '</a>')
#   cc<-paste0('
#   tags$p(""),
#   tags$a(href="', bb[[1]][2], '", "', bb[[1]][1], '")')
#   # cc<-paste0("![{",bb[[1]][2],"}]({",bb[[1]][1],"})")
#   # aa[i][[1]][ii]<-paste0("<li>", cc, "</li>")
#
#   aa[i][[1]][ii]<-cc#paste0('tags$li(', cc, ')')
#   } else {
aa[i][[1]][ii]<-gsub(pattern = '"', replacement = "'", x = aa[i][[1]][ii])
# aa[i][[1]][ii]<-gsub(pattern = "'", replacement = "\\\'", x = aa[i][[1]][ii])
cc<-paste0('tags$p("', aa[i][[1]][ii], '")')
# cc<-paste0('<p>', ifelse(is.na(aa[i][[1]][ii]), "", aa[i][[1]][ii]), '</p>')
# aa[i][[1]][ii]<-paste0("<li>", cc, "</li>")
aa[i][[1]][ii]<-cc#paste0('tags$li(', cc, ')')
# }
}
# aa[i][[1]]<-paste0("tags$div(",
#                    paste(aa[i][[1]], collapse = " "),
#                    ")")
aa[i][[1]]<-paste0('tags$li(', paste(aa[i][[1]], collapse = ", "), ')')
# aa[i][[1]]<-paste(aa[i][[1]], collapse = ", ")
} else {
aa[i][[1]]<-""
}
# aa[i][[1]]<-paste0("")
}
Discussion$Notes<-unlist(aa)
Discussion<-Discussion[,c("Date","Notes","Topic","Authors")]
program<-as_tibble(Discussion) #%>%
View(Discussion)
program
program1<-program[grepl(pattern = "Tuesday, September 22, 2020", x = Discussion0$Date), ]
program1
program1<-program[grepl(pattern = "Wednesday, September 23, 2020", x = Discussion0$Date), ]
program1
program1<-program[grepl(pattern = "Thursday, September 24, 2020", x = Discussion0$Date), ]
program1
program
#Agenda <- data.frame(read_csv("./R Workshop Detailed Schedule.csv", col_names = FALSE))
Agenda <- data.frame(read_csv("./R Workshop Detailed Schedule.csv", col_names = FALSE))
# Agenda <- data.frame(read_csv(here("R Workshop Detailed Schedule.csv"), col_names = FALSE))
names(Agenda)<-Agenda[2,]
Agenda<-Agenda[-c(1:2),]
Agenda$Notes0<-Agenda$Notes
Agenda0 <- Agenda
not0<-c("", "??", NA)
Agenda$Date<-paste0(
Agenda$`Start Time (PT)`, "-", Agenda$`End Time (PT)`
)
Agenda$Title<-paste0(Agenda$`Course Segment`,
ifelse( ( Agenda$`Course Segment` == Agenda$Topics |
Agenda$`Course Segment` %in% not0 |
Agenda$Topics %in% not0 ), "", " - "),
ifelse( ( Agenda$`Course Segment` == Agenda$Topics |
Agenda$Topics %in% not0 ), "", Agenda$Topics) )
Agenda$Authors<-paste0(ifelse(Agenda$Presenter %in% not0, "", paste0("Presenter: ", Agenda$Presenter)), #Presenter
ifelse((Agenda$`Chat/Q&A` %in% not0), "", "; "), # ;
ifelse((Agenda$Presenter %in% not0), "", " "), # Space
ifelse(Agenda$Host %in% not0, "", paste0("Host: ", Agenda$Host)), # Host
ifelse((Agenda$`Chat/Q&A` %in% not0), "", "; "), # ;
ifelse(Agenda$`Chat/Q&A` %in% not0, "", paste0("Help: ", Agenda$`Chat/Q&A`)) ) # Help
Agenda$Notes[is.na(Agenda$Notes)]<-""
aa<-strsplit(x = Agenda$Notes, split = "\n\n")
for (i in 1:length(aa)){
if (length(aa[i][[1]])!=0) {
for (ii in 1:length(aa[i][[1]])) {
# dd<- aa[i][[1]][ii]
if (grepl(pattern = "https://", x = aa[i][[1]][ii], ignore.case = T)) {
bb<-strsplit(x = aa[i][[1]][ii], split = ": ")
if (grepl(pattern = ".html", x = aa[i][[1]][ii], ignore.case = T)) {
htmlname<-strsplit(split = "/", x = bb[[1]][2])[[1]]
download.file(url = bb[[1]][2],
destfile = paste0(getwd(), "/les_", htmlname[length(htmlname)]))
bb[[1]][2]<-paste0("les_", htmlname[length(htmlname)])
}
# cc<-paste0('["', bb[[1]][1], '"] (', bb[[1]][2], '")')
# cc<-paste0('<a href="', bb[[1]][2], '">', bb[[1]][1], '</a>')
cc<-paste0('
tags$p(""),
tags$a(href="', bb[[1]][2], '", "', bb[[1]][1], '")')
# cc<-paste0("![{",bb[[1]][2],"}]({",bb[[1]][1],"})")
# aa[i][[1]][ii]<-paste0("<li>", cc, "</li>")
aa[i][[1]][ii]<-cc#paste0('tags$li(', cc, ')')
} else {
cc<-paste0('tags$p("', aa[i][[1]][ii], '")')
# cc<-paste0('<p>', ifelse(is.na(aa[i][[1]][ii]), "", aa[i][[1]][ii]), '</p>')
# aa[i][[1]][ii]<-paste0("<li>", cc, "</li>")
aa[i][[1]][ii]<-cc#paste0('tags$li(', cc, ')')
}
}
# aa[i][[1]]<-paste0("tags$div(",
#                    paste(aa[i][[1]], collapse = " "),
#                    ")")
aa[i][[1]]<-paste0('tags$li(', paste(aa[i][[1]], collapse = ", "), ')')
# aa[i][[1]]<-paste(aa[i][[1]], collapse = ", ")
} else {
aa[i][[1]]<-""
}
# aa[i][[1]]<-paste0("")
}
Agenda$Notes<-unlist(aa)
Agenda<-Agenda[,c("Date","Notes","Title","Authors")]
program<-as_tibble(Agenda) #%>%
View(Agenda)
Agenda <- data.frame(read_csv("./R Workshop Detailed Schedule.csv", col_names = FALSE))
# Agenda <- data.frame(read_csv(here("R Workshop Detailed Schedule.csv"), col_names = FALSE))
names(Agenda)<-Agenda[2,]
Agenda<-Agenda[-c(1:2),]
Agenda$Notes0<-Agenda$Notes
Agenda0 <- Agenda
not0<-c("", "??", NA)
Agenda$Date<-paste0(
Agenda$`Start Time (PT)`, "-", Agenda$`End Time (PT)`
)
Agenda$Title<-paste0(Agenda$`Course Segment`,
ifelse( ( Agenda$`Course Segment` == Agenda$Topics |
Agenda$`Course Segment` %in% not0 |
Agenda$Topics %in% not0 ), "", " - "),
ifelse( ( Agenda$`Course Segment` == Agenda$Topics |
Agenda$Topics %in% not0 ), "", Agenda$Topics) )
Agenda$Authors<-paste0(ifelse(Agenda$Presenter %in% not0, "", paste0("Presenter: ", Agenda$Presenter)), #Presenter
ifelse((Agenda$`Chat/Q&A` %in% not0), "", "; "), # ;
ifelse((Agenda$Presenter %in% not0), "", " "), # Space
ifelse(Agenda$Host %in% not0, "", paste0("Host: ", Agenda$Host)), # Host
ifelse((Agenda$`Chat/Q&A` %in% not0), "", "; "), # ;
ifelse(Agenda$`Chat/Q&A` %in% not0, "", paste0("Help: ", Agenda$`Chat/Q&A`)) ) # Help
Agenda$Notes[is.na(Agenda$Notes)]<-""
aa<-strsplit(x = Agenda$Notes, split = "\n\n")
for (i in 1:length(aa)){
if (length(aa[i][[1]])!=0) {
for (ii in 1:length(aa[i][[1]])) {
# dd<- aa[i][[1]][ii]
if (grepl(pattern = "https://", x = aa[i][[1]][ii], ignore.case = T)) {
bb<-strsplit(x = aa[i][[1]][ii], split = ": ")
if (grepl(pattern = ".html", x = aa[i][[1]][ii], ignore.case = T)) {
htmlname<-strsplit(split = "/", x = bb[[1]][2])[[1]]
download.file(url = bb[[1]][2],
destfile = paste0(getwd(), "/les_", htmlname[length(htmlname)]))
bb[[1]][2]<-paste0("les_", htmlname[length(htmlname)])
}
# cc<-paste0('["', bb[[1]][1], '"] (', bb[[1]][2], '")')
# cc<-paste0('<a href="', bb[[1]][2], '">', bb[[1]][1], '</a>')
cc<-paste0('
tags$p(""),
tags$a(href="', bb[[1]][2], '", "', bb[[1]][1], '")')
# cc<-paste0("![{",bb[[1]][2],"}]({",bb[[1]][1],"})")
# aa[i][[1]][ii]<-paste0("<li>", cc, "</li>")
aa[i][[1]][ii]<-cc#paste0('tags$li(', cc, ')')
} else {
cc<-paste0('tags$p("', aa[i][[1]][ii], '")')
# cc<-paste0('<p>', ifelse(is.na(aa[i][[1]][ii]), "", aa[i][[1]][ii]), '</p>')
# aa[i][[1]][ii]<-paste0("<li>", cc, "</li>")
aa[i][[1]][ii]<-cc#paste0('tags$li(', cc, ')')
}
}
# aa[i][[1]]<-paste0("tags$div(",
#                    paste(aa[i][[1]], collapse = " "),
#                    ")")
aa[i][[1]]<-paste0('tags$li(', paste(aa[i][[1]], collapse = ", "), ')')
# aa[i][[1]]<-paste(aa[i][[1]], collapse = ", ")
} else {
aa[i][[1]]<-""
}
# aa[i][[1]]<-paste0("")
}
Agenda$Notes<-unlist(aa)
Agenda<-Agenda[,c("Date","Notes","Title","Authors")]
Agenda$Notes
Agenda <- data.frame(read_csv("./R Workshop Detailed Schedule.csv", col_names = FALSE))
# Agenda <- data.frame(read_csv(here("R Workshop Detailed Schedule.csv"), col_names = FALSE))
names(Agenda)<-Agenda[2,]
Agenda<-Agenda[-c(1:2),]
Agenda$Notes0<-Agenda$Notes
Agenda0 <- Agenda
not0<-c("", "??", NA)
Agenda$Date<-paste0(
Agenda$`Start Time (PT)`, "-", Agenda$`End Time (PT)`
)
Agenda$Title<-paste0(Agenda$`Course Segment`,
ifelse( ( Agenda$`Course Segment` == Agenda$Topics |
Agenda$`Course Segment` %in% not0 |
Agenda$Topics %in% not0 ), "", " - "),
ifelse( ( Agenda$`Course Segment` == Agenda$Topics |
Agenda$Topics %in% not0 ), "", Agenda$Topics) )
Agenda$Authors<-paste0(ifelse(Agenda$Presenter %in% not0, "", paste0("Presenter: ", Agenda$Presenter)), #Presenter
ifelse((Agenda$`Chat/Q&A` %in% not0), "", "; "), # ;
ifelse((Agenda$Presenter %in% not0), "", " "), # Space
ifelse(Agenda$Host %in% not0, "", paste0("Host: ", Agenda$Host)), # Host
ifelse((Agenda$`Chat/Q&A` %in% not0), "", "; "), # ;
ifelse(Agenda$`Chat/Q&A` %in% not0, "", paste0("Help: ", Agenda$`Chat/Q&A`)) ) # Help
Agenda$Notes[is.na(Agenda$Notes)]<-""
aa<-strsplit(x = Agenda$Notes, split = "\n\n")
i<-1
i<-15
ii<-2
(grepl(pattern = "https://", x = aa[i][[1]][ii], ignore.case = T))
bb<-strsplit(x = aa[i][[1]][ii], split = ": ")
bb
bb<-strsplit(x = aa[i][[1]][ii], split = ": ")
(grepl(pattern = ".html", x = aa[i][[1]][ii], ignore.case = T))
strsplit(split = "/", x = bb[[1]][2])[[1]]
htmlname<-strsplit(split = "/", x = bb[[1]][2])[[1]]
download.file(url = bb[[1]][2],
destfile = paste0(getwd(), "/les_", htmlname[length(htmlname)]))
paste0("les_", htmlname[length(htmlname)])
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, error = FALSE, message = FALSE)
library(tidyverse)
library(lubridate)
library(htmltools)
library(here)
install.packages("googlesheets")
install.packages("leaflet")
install.packages(DT)
install.packages("DT")
install.packages("tidyverse")
install.packages(RTools)
install.packages(Rtools)
install.packages("Rtools")
wd
getwd()
setwd("~/Coding/RStarterPack")
install.packages(c("backports", "BH", "boot", "broom", "callr", "class", "cli", "clipr", "cluster", "codetools", "colorspace", "crosstalk", "curl", "data.table", "digest", "DirichletReg", "dplyr", "ellipsis", "fansi", "Formula", "fs", "generics", "glue", "here", "hexbin", "hms", "htmltools", "htmlwidgets", "httpuv", "isoband", "jsonlite", "kableExtra", "KernSmooth", "knitr", "labeling", "later", "lattice", "lubridate", "magrittr", "manipulateWidget", "MASS", "Matrix", "maxLik", "mgcv", "mime", "miscTools", "nlme", "nnet", "openssl", "pillar", "pkgconfig", "plotly", "plyr", "processx", "promises", "ps", "R6", "Rcpp", "RCurl", "readr", "remotes", "reshape2", "reticulate", "rlang", "rmarkdown", "rprojroot", "rstudioapi", "sandwich", "scales", "shiny", "spatial", "stringi", "survival", "sys", "testthat", "tibble", "tinytex", "vctrs", "webshot", "withr", "xfun", "yaml", "zoo"))
install.packages(c("backports", "BH", "boot", "broom", "callr", "class", "cli", "clipr", "cluster", "codetools", "colorspace", "crosstalk", "curl", "data.table", "digest", "DirichletReg", "dplyr", "ellipsis", "fansi", "Formula", "fs", "generics", "glue", "here", "hexbin", "hms", "htmltools", "htmlwidgets", "httpuv", "isoband", "jsonlite", "kableExtra", "KernSmooth", "knitr", "labeling", "later", "lattice", "lubridate", "magrittr", "manipulateWidget", "MASS", "Matrix", "maxLik", "mgcv", "mime", "miscTools", "nlme", "nnet", "openssl", "pillar", "pkgconfig", "plotly", "plyr", "processx", "promises", "ps", "R6", "Rcpp", "RCurl", "readr", "remotes", "reshape2", "reticulate", "rlang", "rmarkdown", "rprojroot", "rstudioapi", "sandwich", "scales", "shiny", "spatial", "stringi", "survival", "sys", "testthat", "tibble", "tinytex", "vctrs", "webshot", "withr", "xfun", "yaml", "zoo"))
install.packages(c("backports", "BH", "boot", "broom", "callr", "class", "cli", "clipr", "cluster", "codetools", "colorspace", "crosstalk", "curl", "data.table", "digest", "DirichletReg", "dplyr", "ellipsis", "fansi", "Formula", "fs", "generics", "glue", "here", "hexbin", "hms", "htmltools", "htmlwidgets", "httpuv", "isoband", "jsonlite", "kableExtra", "KernSmooth", "knitr", "labeling", "later", "lattice", "lubridate", "magrittr", "manipulateWidget", "MASS", "Matrix", "maxLik", "mgcv", "mime", "miscTools", "nlme", "nnet", "openssl", "pillar", "pkgconfig", "plotly", "plyr", "processx", "promises", "ps", "R6", "Rcpp", "RCurl", "readr", "remotes", "reshape2", "reticulate", "rlang", "rmarkdown", "rprojroot", "rstudioapi", "sandwich", "scales", "shiny", "spatial", "stringi", "survival", "sys", "testthat", "tibble", "tinytex", "vctrs", "webshot", "withr", "xfun", "yaml", "zoo"))
install.packages(c("backports", "BH", "boot", "broom", "callr", "class", "cli", "clipr", "cluster", "codetools", "colorspace", "crosstalk", "curl", "data.table", "digest", "DirichletReg", "dplyr", "ellipsis", "fansi", "Formula", "fs", "generics", "glue", "here", "hexbin", "hms", "htmltools", "htmlwidgets", "httpuv", "isoband", "jsonlite", "kableExtra", "KernSmooth", "knitr", "labeling", "later", "lattice", "lubridate", "magrittr", "manipulateWidget", "MASS", "Matrix", "maxLik", "mgcv", "mime", "miscTools", "nlme", "nnet", "openssl", "pillar", "pkgconfig", "plotly", "plyr", "processx", "promises", "ps", "R6", "Rcpp", "RCurl", "readr", "remotes", "reshape2", "reticulate", "rlang", "rmarkdown", "rprojroot", "rstudioapi", "sandwich", "scales", "shiny", "spatial", "stringi", "survival", "sys", "testthat", "tibble", "tinytex", "vctrs", "webshot", "withr", "xfun", "yaml", "zoo"))
install.packages(c("backports", "BH", "boot", "broom", "callr", "class", "cli", "clipr", "cluster", "codetools", "colorspace", "crosstalk", "curl", "data.table", "digest", "DirichletReg", "dplyr", "ellipsis", "fansi", "Formula", "fs", "generics", "glue", "here", "hexbin", "hms", "htmltools", "htmlwidgets", "httpuv", "isoband", "jsonlite", "kableExtra", "KernSmooth", "knitr", "labeling", "later", "lattice", "lubridate", "magrittr", "manipulateWidget", "MASS", "Matrix", "maxLik", "mgcv", "mime", "miscTools", "nlme", "nnet", "openssl", "pillar", "pkgconfig", "plotly", "plyr", "processx", "promises", "ps", "R6", "Rcpp", "RCurl", "readr", "remotes", "reshape2", "reticulate", "rlang", "rmarkdown", "rprojroot", "rstudioapi", "sandwich", "scales", "shiny", "spatial", "stringi", "survival", "sys", "testthat", "tibble", "tinytex", "vctrs", "webshot", "withr", "xfun", "yaml", "zoo"))
git merge(origin/master)
git reset
Agenda <- data.frame(read_csv(here("R_Workshop_Detailed_Schedule.csv"), col_names = FALSE))
